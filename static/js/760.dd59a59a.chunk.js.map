{"version":3,"file":"static/js/760.dd59a59a.chunk.js","mappings":"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","sources":["components/TransactionSelect/iconsForSelectCategory.js","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.module.scss?9482","pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.jsx","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/Transactions/Transactions.module.scss?5055","pages/StatisticsPage/TransactionsPage/ModalTransactions/ModalTransactions.jsx","pages/StatisticsPage/TransactionsPage/Transactions/Transactions.jsx","redux/Expenses/expensesSelectors.js","redux/transactions/transactionsSelector.js","webpack://ITD-React-project/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionItem\":\"TransactionsItem_transactionItem__I4efX\",\"commentWrapper\":\"TransactionsItem_commentWrapper__NOBZi\",\"transactionThumb\":\"TransactionsItem_transactionThumb__8EK3s\",\"thumb\":\"TransactionsItem_thumb__siEpA\",\"transactionDate\":\"TransactionsItem_transactionDate__i0qAD\",\"transactionComment\":\"TransactionsItem_transactionComment__otRnm\",\"transactionSum\":\"TransactionsItem_transactionSum__heA7p\",\"transactionCategory\":\"TransactionsItem_transactionCategory__udzxZ\",\"buttonThumb\":\"TransactionsItem_buttonThumb__g1kfu\",\"buttonItem\":\"TransactionsItem_buttonItem__xDui1\"};","import moment from 'moment';\nimport Icon from '../../../../components/Icon/Icon';\nimport s from './TransactionsItem.module.scss';\n\nconst TransactionsItem = ({\n  openModal,\n  id,\n  sum,\n  date,\n  category,\n  comment,\n  handleRemoveTransaction,\n}) => {\n  return (\n    <li className={s.transactionItem} key={id}>\n      <div className={s.transactionThumb}>\n        <div className={s.commentWrapper}>\n          <p className={s.transactionDate}>{moment(date).format('MM.YYYY')}</p>\n          <p className={s.transactionComment}>{comment}</p>\n        </div>\n\n        <div>\n          <p className={s.transactionSum}>{sum} â‚´</p>\n        </div>\n      </div>\n      <div className={s.thumb}>\n        <p className={s.transactionCategory}>{category}</p>\n        <div className={s.buttonThumb}>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={() => openModal({ id, sum, date, category, comment })}\n          >\n            <Icon\n              name={'icon-pencil'}\n              width={'22'}\n              height={'22'}\n              className={'icon-pencil'}\n            />\n          </button>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={() => handleRemoveTransaction(id, date)}\n          >\n            <Icon\n              name={'icon-trash'}\n              width={'24'}\n              height={'24'}\n              className={'icon-trash'}\n            />\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionList\":\"Transactions_transactionList__76l1J\",\"formWrapper\":\"Transactions_formWrapper__jwN96\",\"formLabel\":\"Transactions_formLabel__k1ayP\",\"formInput\":\"Transactions_formInput__tc3pe\",\"buttonEdit\":\"Transactions_buttonEdit__vYe-K\",\"buttonCloseModal\":\"Transactions_buttonCloseModal__xCCdw\",\"noTransactionWrapper\":\"Transactions_noTransactionWrapper__wWn6x\",\"noTransactionText\":\"Transactions_noTransactionText__ncH1P\",\"dropdown\":\"Transactions_dropdown__TA-WL\",\"options\":\"Transactions_options__100NG\",\"overlayAddIncome\":\"Transactions_overlayAddIncome__YfVME\",\"modalWrapper\":\"Transactions_modalWrapper__BOCR6\",\"select-container\":\"Transactions_select-container__5Hbmj\",\"select__control\":\"Transactions_select__control__xkbTq\",\"select__indicator\":\"Transactions_select__indicator__iPkZ3\",\"select__indicator-separator\":\"Transactions_select__indicator-separator__Ms4mF\",\"select__single-value\":\"Transactions_select__single-value__WzjYT\",\"select__placeholder\":\"Transactions_select__placeholder__8j-CQ\",\"select__value-container\":\"Transactions_select__value-container__iW+Ie\",\"select__menu\":\"Transactions_select__menu__X90wH\",\"select__option\":\"Transactions_select__option__nxnpj\",\"select__option--is-focused\":\"Transactions_select__option--is-focused__Sv2x+\",\"select__option--is-selected\":\"Transactions_select__option--is-selected__8f6jc\",\"labelForSelector\":\"Transactions_labelForSelector__RwlCT\",\"labelText\":\"Transactions_labelText__Vti7J\",\"flex\":\"Transactions_flex__8v7Ld\",\"error\":\"Transactions_error__8eB8D\"};","import { createPortal } from 'react-dom';\nimport s from '../Transactions/Transactions.module.scss';\nimport Icon from 'components/Icon/Icon';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport c from '../../../../components/ModalAddIncome/MoadlAddIncome.module.scss';\nimport { useCallback, useEffect, useState } from 'react';\nimport { categorySelect } from 'redux/Expenses/expensesSelectors';\nimport { updateTransaction } from 'redux/transactions/transactionsOperations';\nimport { IconOption } from 'components/TransactionSelect/iconsForSelectCategory';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { getCategory } from 'redux/Expenses/expensesOperations';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalTransaction = ({ closeModal, transactionData }) => {\n  const { id, sum, comment, category: newCategory, date: newDate } = transactionData;\n\n  const [currentCategory, setCurrentCategory] = useState(newCategory);\n  const [currentSum] = useState(sum);\n  const [currentComent] = useState(comment);\n\n  const category = useSelector(categorySelect);\n  const dispatch = useDispatch();\n\n\n  const closeModalByEscape = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  const closeModalOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEscape);\n    };\n  }, [closeModalByEscape]);\n\n  useEffect(() => {\n    dispatch(getCategory());\n  }, [dispatch]);\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const getValue = () => {\n    return currentCategory\n      ? transformCategory.find(c => c.value === currentCategory)\n      : '';\n  };\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome} onClick={closeModalOnBackdrop}>\n      <div className={s.modalWrapper}>\n        <Formik\n          initialValues={{\n            type: 'expense',\n            category: currentCategory,\n            comment: !currentComent ? 'no comment' : currentComent,\n            sum: Number(currentSum),\n          }}\n          validationSchema={Yup.object({\n            category: Yup.string().required('Required'),\n            comment: Yup.string()\n              .required('Required')\n              .min(4, 'Must be 4 characters or more')\n              .max(80, 'Must be 80 characters or less'),\n            sum: Yup.number().required('Required'),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            const date = new Date(newDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            dispatch(\n              updateTransaction({\n                id,\n                values: { ...values, category: currentCategory },\n                date: { year, month },\n              })\n            );\n\n            closeModal();\n            setSubmitting(false);\n          }}\n        >\n          {({ errors, touched, values }) => (\n            <Form className={s.formWrapper}>\n              <label className={s.labelForSelector}>\n                <p className={s.labelText}>Per category</p>\n                <Select\n                  onChange={onChange}\n                  value={getValue()}\n                  isSearchable={false}\n                  placeholder={currentCategory}\n                  className=\"select-container\"\n                  classNamePrefix=\"select\"\n                  options={transformCategory}\n                  name=\"category\"\n                  components={{ Option: IconOption }}\n                />\n                <div className={s.options}></div>\n              </label>\n              <div className={s.flex}>\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.comment && errors.comment\n                        ? '1px solid red'\n                        : 'none'\n                    }`,\n                  }}\n                >\n                  Expense comment\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder=\"Enter comment\"\n                  />\n                  {touched.comment && errors.comment && (\n                    <div className={s.error}>{errors.comment}</div>\n                  )}\n                </label>\n\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.sum && errors.sum ? '1px solid red' : 'none'\n                    }`,\n                  }}\n                >\n                  Sum\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"sum\"\n                    placeholder=\"00.00\"\n                  />\n                  {touched.sum && errors.sum && (\n                    <div className={s.error}>{errors.sum}</div>\n                  )}\n                </label>\n\n                <div>\n                  <button className={s.buttonEdit} type=\"submit\">\n                    Edit\n                  </button>\n                </div>\n                <button\n                  className={s.buttonCloseModal}\n                  type=\"button\"\n                  onClick={() => closeModal()}\n                >\n                  <Icon\n                    name=\"icon-close\"\n                    width={24}\n                    height={24}\n                    secondaryClassName={c.iconClose}\n                  />\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\nexport default ModalTransaction;\n","import TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport css from './Transactions.module.scss';\nimport ModalTransaction from '../ModalTransactions/ModalTransactions';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { selectedTransactions } from 'redux/transactions/transactionsSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nconst Transactions = () => {\n  const transactions = useSelector(selectedTransactions);\n  const [transactionData, setTransactionData] = useState(null);\n  const dispatch = useDispatch();\n\n  const openModal = (data) => {\n    setTransactionData(data);\n  };\n\n  const closeModal = () => setTransactionData(null);\n\n  const handleRemoveTransaction = (id, newDate) => {\n    const date = new Date(newDate);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    dispatch(removeTransaction({id, date: { year, month }}));\n  };\n\n  return (\n    <>\n      {transactions?.length === 0 ? (\n        <div className={css.noTransactionWrapper}>\n          <p className={css.noTransactionText}>You have no transactions</p>\n        </div>\n      ) : (\n        <ul className={css.transactionList}>\n          {transactions &&\n            transactions.map(({ _id: id, sum, comment, category, date }) => (\n              <TransactionsItem\n                key={id}\n                openModal={openModal}\n                id={id}\n                sum={sum}\n                comment={comment}\n                category={category}\n                date={date}\n                handleRemoveTransaction={handleRemoveTransaction}\n              />\n            ))}\n        </ul>\n      )}\n      {transactionData && (\n        <ModalTransaction\n          closeModal={closeModal}\n          transactionData={transactionData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Transactions;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedTransactions = state => state.statistics.transactions;\nexport const selectedCategoriesStat = state => state.statistics.categoriesStat;\nexport const selectedIsLoading = state => state.statistics.isLoading;\nexport const selectedError = state => state.statistics.error;\n\nexport const selectedChengedCategoriesStat = createSelector(\n  [selectedCategoriesStat],\n  categoriesStat => {\n    const totalSpend = categoriesStat.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    const updatedCategoriesStat = categoriesStat.map(category => {\n      return {\n        ...category,\n        percentage: ((category.amount / totalSpend) * 100).toFixed(1),\n      };\n    });\n    return updatedCategoriesStat;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["Option","components","IconOption","props","name","data","value","width","height","secondaryClassName","c","label","openModal","id","sum","date","category","comment","handleRemoveTransaction","className","s","moment","format","type","onClick","Icon","modalRoot","document","querySelector","closeModal","transactionData","newCategory","newDate","useState","currentCategory","setCurrentCategory","currentSum","currentComent","useSelector","categorySelect","dispatch","useDispatch","closeModalByEscape","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","getCategory","transformCategory","map","title","onChange","newValue","createPortal","target","currentTarget","initialValues","Number","validationSchema","Yup","required","min","max","onSubmit","values","setSubmitting","Date","year","getFullYear","month","getMonth","updateTransaction","errors","touched","find","isSearchable","placeholder","classNamePrefix","options","style","outline","transactions","selectedTransactions","setTransactionData","removeTransaction","length","css","_id","presavingSelect","state","expenses","presaving","selectorIsCashflowLoading","isLoading","statistics","selectedIsLoading","selectedChengedCategoriesStat","createSelector","categoriesStat","totalSpend","reduce","acc","item","amount","percentage","toFixed"],"sourceRoot":""}