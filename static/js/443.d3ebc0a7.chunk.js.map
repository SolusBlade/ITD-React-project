{"version":3,"file":"static/js/443.d3ebc0a7.chunk.js","mappings":"wKACA,MAAiC,mCAAjC,EAAqF,mCAArF,EAA2I,qCAA3I,EAAgM,kCAAhM,EAAqP,qCAArP,EAA2S,mCAA3S,EAAqW,yCAArW,EAAka,sC,6BC+Bla,EA3BmB,WACjB,IAAMA,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE/B,OACE,gCAC0B,KAAb,OAAVF,QAAU,IAAVA,OAAA,EAAAA,EAAYG,UACX,gBAAKC,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,yCAGJ,eAAID,UAAWC,EAAf,SACGL,EACEM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,SAASC,cAAcF,EAAEC,SAArC,IACLE,KAAI,gBAAGF,EAAH,EAAGA,SAAUG,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,WAArB,OACH,gBAAmBT,UAAWC,EAA9B,WACE,kBAAMD,UAAWC,EAAjB,WACE,cAAGD,UAAWC,EAAd,SAAgCI,KAChC,eAAGL,UAAWC,EAAd,cAAoCO,EAApC,iBAEF,eAAGR,UAAWC,EAAd,UAAiCS,WAAWD,GAA5C,SALOJ,EADN,QAYd,C,gIC5BYM,EAAuB,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,YAArB,EAE5BC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,WAAWG,SAArB,EAGzBlB,GAAgCmB,EAAAA,EAAAA,IAC3C,CALoC,SAAAL,GAAK,OAAIA,EAAMC,WAAWK,cAArB,IAMzC,SAAAA,GACE,IAAMC,EAAaD,EAAeE,QAChC,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKd,MAA1B,GACA,GAQF,OAN8BU,EAAeX,KAAI,SAAAF,GAC/C,OAAO,kBACFA,GADL,IAEEI,YAAcJ,EAASG,OAASW,EAAc,KAAKI,QAAQ,IAE9D,GAEF,G","sources":["webpack://ITD-React-project/./src/pages/StatisticsPage/Categories/Categories.module.scss?feba","pages/StatisticsPage/Categories/Categories.jsx","redux/transactions/transactionsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"categoriesList\":\"Categories_categoriesList__xCnqq\",\"categoriesItem\":\"Categories_categoriesItem__EuQdf\",\"categoriesItemEl\":\"Categories_categoriesItemEl__LnfDW\",\"categoriesDes\":\"Categories_categoriesDes__N5bKE\",\"categoriesAmount\":\"Categories_categoriesAmount__d+Qf8\",\"categoriesPerc\":\"Categories_categoriesPerc__pZ462\",\"noTransactionWrapper\":\"Categories_noTransactionWrapper__MuN6G\",\"noTransactionText\":\"Categories_noTransactionText__AtnSr\"};","import d from './Categories.module.scss';\n\nimport { useSelector } from 'react-redux';\nimport { selectedChengedCategoriesStat } from 'redux/transactions/transactionsSelector';\n\nconst Categories = () => {\n  const categories = useSelector(selectedChengedCategoriesStat);\n\n  return (\n    <>\n      {categories?.length === 0 && (\n        <div className={d.noTransactionWrapper}>\n          <p className={d.noTransactionText}>You have no transactions</p>\n        </div>\n      )}\n      <ul className={d.categoriesList}>\n        {categories\n          .sort((a, b) => a.category.localeCompare(b.category))\n          .map(({ category, amount, percentage }) => (\n            <li key={category} className={d.categoriesItem}>\n              <span className={d.categoriesItemEl}>\n                <p className={d.categoriesDes}>{category}</p>\n                <p className={d.categoriesAmount}>-{amount} â‚´</p>\n              </span>\n              <p className={d.categoriesPerc}>{parseFloat(percentage)}%</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Categories;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedTransactions = state => state.statistics.transactions;\nexport const selectedCategoriesStat = state => state.statistics.categoriesStat;\nexport const selectedIsLoading = state => state.statistics.isLoading;\nexport const selectedError = state => state.statistics.error;\n\nexport const selectedChengedCategoriesStat = createSelector(\n  [selectedCategoriesStat],\n  categoriesStat => {\n    const totalSpend = categoriesStat.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    const updatedCategoriesStat = categoriesStat.map(category => {\n      return {\n        ...category,\n        percentage: ((category.amount / totalSpend) * 100).toFixed(1),\n      };\n    });\n    return updatedCategoriesStat;\n  }\n);\n"],"names":["categories","useSelector","selectedChengedCategoriesStat","length","className","d","sort","a","b","category","localeCompare","map","amount","percentage","parseFloat","selectedTransactions","state","statistics","transactions","selectedIsLoading","isLoading","createSelector","categoriesStat","totalSpend","reduce","acc","item","toFixed"],"sourceRoot":""}