{"version":3,"file":"static/js/338.6e0f01a9.chunk.js","mappings":"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","sources":["components/DateComp/DateComp.jsx","webpack://ITD-React-project/./src/components/Dynamics/Chart.module.scss?52aa","services/dynamics/chartOptions.js","redux/dynamics/dynamicsVariables.js","components/Dynamics/Chart.jsx","webpack://ITD-React-project/./src/components/Dynamics/Info.module.scss?4537","components/Dynamics/OutsideKlicker.jsx","webpack://ITD-React-project/./src/components/ModalHooray/ModalHooray.module.scss?4e6d","components/ModalHooray/ModalHooray.jsx","components/Dynamics/Info.jsx","webpack://ITD-React-project/./src/pages/DynamicsPage/DynamicsPage.module.scss?258c","pages/DynamicsPage/DynamicsPage.jsx"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DateComp.scss';\nimport Icon from 'components/Icon/Icon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCategoriesStat,\n  getTransaction,\n} from 'redux/transactions/transactionsOperations';\nimport { useLocation } from 'react-router-dom';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\nimport { getDynamicsByMonth } from 'redux/dynamics/dynamicsOperations';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateComp = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const location = useLocation();\n  const [isDirty, setIsDirty] = useState(false);\n\n  const isDynamicsPage = location.pathname.endsWith('dynamics');\n\n  useEffect(() => {\n    if (location.pathname.endsWith('transactions')) {\n      isLoggedIn && dispatch(getTransaction(changedDateForApi(selectedDate)));\n    }\n    if (location.pathname.endsWith('categories')) {\n      isLoggedIn &&\n        dispatch(getCategoriesStat(changedDateForApi(selectedDate)));\n    }\n    if (location.pathname.endsWith('dynamics')) {\n      isLoggedIn &&\n        dispatch(getDynamicsByMonth(changedDateForApi(selectedDate)));\n    }\n  }, [isLoggedIn, dispatch, location.pathname, selectedDate]);\n\n  const changedDateForPicker = newDate => {\n    const month = newDate.getMonth();\n    const year = newDate.getFullYear();\n    return `${months[month]}, ${year}`;\n  };\n\n  const changedDateForApi = newDate => {\n    const month = newDate.getMonth();\n    const year = newDate.getFullYear();\n    return { year, month: month + 1 };\n  };\n\n  const handleCloseCalendar = date => {\n    if (isDirty) {\n      return;\n    }\n    if (location.pathname.endsWith('transactions')) {\n      dispatch(getTransaction(changedDateForApi(date)));\n    }\n    if (location.pathname.endsWith('categories')) {\n      dispatch(getCategoriesStat(changedDateForApi(date)));\n    }\n    if (isDynamicsPage) {\n      dispatch(getDynamicsByMonth(changedDateForApi(date)));\n    }\n    setIsDirty(true);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setIsDirty(true);\n  }\n\n  return (\n    <div\n      className={clsx('calendarWrap', isDynamicsPage && 'calendarDynamicsWrap')}\n    >\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => handleDateChange(date)} // используем setSelectedDate, чтобы обновлять значение выбранной даты\n        value={changedDateForPicker(selectedDate)}\n        onCalendarClose={() => handleCloseCalendar(selectedDate)}\n        maxDate={new Date()}\n        dateFormat=\"MM/yyyy\"\n        showMonthYearPicker\n      />\n      <Icon\n        name={!isDynamicsPage ? 'icon-calendar' : 'icon-vector-down'}\n        width={'24'}\n        height={'24'}\n        className={'icon-calendar'}\n        secondaryClassName={'icon-claendar-dynamics'}\n      />\n    </div>\n  );\n};\n\nexport default DateComp;\n","// extracted by mini-css-extract-plugin\nexport default {\"dynamicsChartContainer\":\"Chart_dynamicsChartContainer__l5JKW\",\"title\":\"Chart_title__eAN-E\",\"list\":\"Chart_list__C+uqb\",\"listItem\":\"Chart_listItem__dTZyR\",\"chartContainer\":\"Chart_chartContainer__AKMWK\",\"select\":\"Chart_select__VD3be\",\"statList\":\"Chart_statList__YMJpy\",\"statListItem\":\"Chart_statListItem__4USfE\",\"itemTitle\":\"Chart_itemTitle__1AXCy\",\"itemNum\":\"Chart_itemNum__1A-8B\",\"errorItem\":\"Chart_errorItem__BDI6B\"};","export const optionsPhone = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    indexAxis: 'y',\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        labels: {\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 40\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: false,\n          borderColor: 'white',\n          borderWidth: 2,\n        },\n        border: {\n          display: false,\n        },\n        ticks: {\n          color: '#F3F3F3',\n          padding: 0,\n          backdropPadding: 0,\n          font: {\n            size: 12,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n       },\n       position:{\n        y: -0.75\n       }\n      },\n      x: {\n        grid: {\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          tickLength: 13,\n          tickBorderDash: [3, 10],\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n        },\n        position: 'top',\n\n      }\n    },\n    labels: {\n      fontColor: '#F3F3F3'\n    },\n  };\n\n  export const optionsTablet = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    indexAxis: 'x',\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        labels: {\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 0\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: true,\n          offset: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          tickLength: 10,\n          tickBorderDash: [3, 10],\n        },\n        border: {\n          display: true,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n          backdropPadding: 0,\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          tickLength: 10,\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n      }\n    },\n  }","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectDynamics = state => state.dynamics;\nexport const selectStatByYear = state => state.dynamics.statByYear;\nexport const selectStatByMonth = state => state.dynamics.statByMonth;\nexport const selectAccumToOneMoreMeters = state => state.dynamics.accumToOneMoreMeters;\nexport const selectAccumulatedProc = state => state.dynamics.accumulatedProc;\nexport const selectAccumulatedUah = state => state.dynamics.accumulatedUah;\nexport const selectFlatImage = state => state.dynamics.flatImage;\nexport const selectMonth = state => state.dynamics.month;\nexport const selectSquareMeters = state => state.dynamics.squareМeters;\nexport const selectYear = state => state.dynamics.year;\nexport const selectDynamicsPlanFootage = state => state.ownPlan.plan.footage;\nexport const selectDynamicsPlanCost = state => state.ownPlan.plan.cost;\n\nexport const selectorOneMoreMeterCost = createSelector(\n  [selectAccumulatedUah, selectDynamicsPlanFootage, selectDynamicsPlanCost],\n  (accumulatedUah, footage, cost) => {\n    const oneSquareMeterCost = cost / footage;\n    const oneMoreMeterCost =\n      oneSquareMeterCost > accumulatedUah\n        ? oneSquareMeterCost - accumulatedUah\n        : oneSquareMeterCost - (accumulatedUah % oneSquareMeterCost);\n\n    return oneMoreMeterCost === 0 ? oneSquareMeterCost : oneMoreMeterCost;\n  }\n);\n","import { \n    Chart as ChartJS, \n    ArcElement, \n    Tooltip, \n    Legend, \n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title\n} from \"chart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport { useRef, useEffect, useMemo } from 'react';\nimport style from './Chart.module.scss';\nimport { optionsPhone, optionsTablet } from 'services/dynamics/chartOptions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDynamics } from 'redux/dynamics/dynamicsOperations';\nimport {\n  selectStatByMonth,\n  selectStatByYear,\n} from 'redux/dynamics/dynamicsVariables';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport DateComp from '../DateComp/DateComp';\nimport { useMediaQuery } from 'react-responsive';\n\nChartJS.register(\n  ArcElement,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title\n);\n\nexport const Chart = () => {\n  const matchesTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  const dispatch = useDispatch();\n  const chartRef = useRef(null);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const statByYear = useSelector(selectStatByYear);\n  const statByMonth = useSelector(selectStatByMonth);\n  const { income, expense, accumulated, plan, planInProcent } = statByMonth;\n\n  const labels = useMemo(() => {\n    return [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getDynamics());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  const data = useMemo(() => {\n    return {\n      labels,\n      datasets: [\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              let accumulated = elem.income - elem.expense;\n              if (i + 1 === +elem.month) {\n                return accumulated >= 0 ? accumulated : 1;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#6359E9',\n        },\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              if (i + 1 === +elem.month) {\n                return elem.expense;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#3A6AF5',\n        },\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              if (i + 1 === +elem.month) {\n                return elem.income;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#F3F3F3',\n        },\n      ],\n    };\n  }, [labels, statByYear]);\n\n  return (\n    <div className={style.dynamicsChartContainer}>\n      <h1 className={style.title}>Dynamics of expenses and savings</h1>\n      <ul className={style.list}>\n        <li className={style.listItem}>Accumulated</li>\n        <li className={style.listItem}>Expenses</li>\n        <li className={style.listItem}>Income</li>\n      </ul>\n\n      {matchesTablet ? (\n        <div className={style.chartContainer}>\n          <Bar\n            ref={chartRef}\n            options={optionsTablet}\n            data={data}\n            height={'100%'}\n            width={'100%'}\n          />\n        </div>\n      ) : (\n        <>\n          <div className={style.chartContainer}>\n            <Bar\n              ref={chartRef}\n              options={optionsPhone}\n              data={data}\n              height={'100%'}\n              width={'100%'}\n            />\n          </div>\n        </>\n      )}\n      <div className={style.statContainer}>\n        <DateComp />\n        {statByMonth === 'no transactions for this period' ? (\n          <p className={style.errorItem}>No information for this period</p>\n        ) : (\n          <ul className={style.statList}>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Income, &#8372;</p>\n              <p className={style.itemNum}>{income ? income : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Expenses, &#8372;</p>\n              <p className={style.itemNum}>{expense ? expense : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Accumulated, &#8372;</p>\n              <p className={style.itemNum}>{accumulated ? accumulated : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Plan, &#8372;</p>\n              <p className={style.itemNum}>{plan ? plan : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Plan, %</p>\n              <p className={style.itemNum}>\n                {planInProcent ? parseInt(planInProcent) : 0}\n              </p>\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"Info_infoContainer__Lmpcd\",\"title\":\"Info_title__euRFB\",\"list\":\"Info_list__TyBOA\",\"item\":\"Info_item__nT5Sh\",\"text\":\"Info_text__52E5-\",\"num\":\"Info_num__bHqjF\",\"barTitle\":\"Info_barTitle__zB1yE\",\"bar\":\"Info_bar__3VkbB\",\"barFill\":\"Info_barFill__SQkUC\",\"imageElement\":\"Info_imageElement__izvFD\",\"imageContainer\":\"Info_imageContainer__Gx+9j\",\"image\":\"Info_image__yi7O7\",\"imageBtn\":\"Info_imageBtn__JnSA4\",\"accRemain\":\"Info_accRemain__a01X5\",\"accTitleContainer\":\"Info_accTitleContainer__5lwC9\",\"accTitle\":\"Info_accTitle__pFO9i\",\"accSpan\":\"Info_accSpan__RdcDJ\",\"accNum\":\"Info_accNum__qbWlE\",\"svgContainer\":\"Info_svgContainer__WtBiO\"};","import React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  // eslint-disable-next-line\n  let { trigger, setTrigger } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setTrigger((trigger = true));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"ModalHooray_overlay__Pjm6L\",\"modalWrap\":\"ModalHooray_modalWrap__6L4y9\",\"title\":\"ModalHooray_title__fVu1m\",\"text\":\"ModalHooray_text__iQO3v\",\"bcgLeft\":\"ModalHooray_bcgLeft__TzbkH\",\"bcgRight\":\"ModalHooray_bcgRight__4-6Fq\",\"btnClose\":\"ModalHooray_btnClose__5IVAL\"};","import Icon from 'components/Icon/Icon';\nimport s from './ModalHooray.module.scss';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalHooray = ({ closeModal }) => {\n  return createPortal(\n    <div className={s.overlay}>\n      <div className={s.modalWrap}>\n        <button className={s.btnClose} onClick={() => closeModal()}>\n          <Icon\n            name=\"icon-close\"\n            width={24}\n            height={24}\n            fill={'white'}\n          />\n        </button>\n        <h3 className={s.title}>Hooray! Congratulations!</h3>\n        <p className={s.text}>\n          You did it! <br />\n          We are so proud of you and wish you all the best as you embark on this\n          exciting new chapter of your life.\n        </p>\n        <div className={s.bcgLeft} />\n        <div className={s.bcgRight} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalHooray;\n\n//* для компонента, звідки модалка викликатиметься -->\n//\n//  const [isModalOpen, setIsModalOpen] = useState(false);\n// const openModal = () => setIsModalOpen(true);\n// const closeModal = () => setIsModalOpen(false);\n\n//* в розмітку компонента return -->\n// {isModalOpen && (\n// <ModalHooray closeModal={closeModal} />\n// )}\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Info.module.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { postImage } from \"redux/dynamics/dynamicsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport { selectorIsPlanFootage, selectorStatePlan } from \"redux/plan/planSelectors\";\nimport { \n    selectAccumulatedProc,\n    selectAccumulatedUah,\n    selectFlatImage, \n    selectMonth,\n    selectSquareMeters,\n    selectYear,\n    selectorOneMoreMeterCost, \n } from \"redux/dynamics/dynamicsVariables\";\n import { OutsideClicker } from \"./OutsideKlicker\";\nimport Icon from \"components/Icon/Icon\";\nimport ModalHooray from 'components/ModalHooray/ModalHooray';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst baseStyle = {\n  width: '87%',\n  height: '87%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 10,\n  borderColor: 'rgba(255, 255, 255, 0.2)',\n  borderStyle: 'dashed',\n  backgroundColor: 'rgba(110, 110, 110, 0.2)',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nexport const Info = props => {\n  const accumulatedProc = useSelector(selectAccumulatedProc);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const accumulatedUah = useSelector(selectAccumulatedUah);\n  const flatImage = useSelector(selectFlatImage);\n  const month = useSelector(selectMonth);\n  const squareMeters = useSelector(selectSquareMeters);\n  const year = useSelector(selectYear);\n  const plan = useSelector(selectorStatePlan);\n  const isPlan = useSelector(selectorIsPlanFootage);\n  const oneMoreMeterCost = useSelector(selectorOneMoreMeterCost);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'image/jpeg': [],\n      'image/png': [],\n    },\n  });\n  let [trigger, setTrigger] = useState(true);\n  const dispatch = useDispatch();\n  const file = acceptedFiles;\n\n  useEffect(() => {\n    if (file.length > 0) {\n      const formData = new FormData();\n      formData.append('image', acceptedFiles[0]);\n      dispatch(postImage(formData));\n    }\n  }, [acceptedFiles, file.length, dispatch, trigger]);\n\n  useEffect(() => {\n    if (isPlan && isLoggedIn && Number(squareMeters) >= plan.footage) {\n      setIsModalOpen(true);\n    }\n  }, [plan.footage, squareMeters, isLoggedIn, isPlan]);\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n    }),\n    []\n  );\n\n  function percentage() {\n    const percentageCounted = (squareMeters / plan.footage) * 100;\n    return percentageCounted >= 100 ? `${100}%` : `${percentageCounted}%`;\n  }\n\n  function imageHandler() {\n    if (!flatImage) setTrigger(false);\n    return;\n  }\n\n  function compareNumbers(a, b) {\n    return a > b ? b : a;\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  function hideImgButton () {\n    return trigger ? 'visible' : 'hidden';\n  }\n\n  return (\n    <>\n      {isModalOpen && <ModalHooray closeModal={closeModal} />}\n      <div className={styles.infoContainer}>\n        <div className={styles.accumulated}>\n          <p className={styles.title}>\n            {/* After {year ? 0 : year} years {month ? 0 : month} month */}\n            After {(accumulatedUah >= plan.cost) ? 0 : year} {`${' '}`}\n             years {(accumulatedUah >= plan.cost) ? 0 : month} month\n          </p>\n          <ul className={styles.list}>\n            <li className={styles.item}>\n              <p className={styles.text}>Accumulated, %:</p>\n              <p className={styles.num}>\n                {compareNumbers(accumulatedProc, 100)}%\n              </p>\n            </li>\n            <li className={styles.item}>\n              <p className={styles.text}>Accumulated, UAH:</p>\n              <p className={styles.num}>\n                {compareNumbers(accumulatedUah, plan.cost)} &#8372;\n              </p>\n            </li>\n            <li className={styles.item}>\n              <p className={styles.text}>And This:</p>\n              <p className={styles.num}>\n                {squareMeters >= plan.footage ? plan.footage : squareMeters}{' '}\n                sq.m\n              </p>\n            </li>\n          </ul>\n\n          <p className={styles.barTitle}>\n            {compareNumbers(squareMeters, plan.footage)} out of {plan.footage}{' '}\n            sq.m accumulated\n          </p>\n          <div className={styles.bar}>\n            <div\n              className={styles.barFill}\n              style={{ width: percentage() }}\n            ></div>\n          </div>\n        </div>\n\n        <div className={styles.imageElement}>\n            <OutsideClicker trigger={trigger} setTrigger={setTrigger}>\n            {trigger ? (\n                <div className={styles.imageContainer} onClick={imageHandler}>\n                    {flatImage ? (\n                        <>\n                        <img\n                            className={styles.image}\n                            src={flatImage}\n                            alt=\"flat plan\"\n                        ></img>\n                        {/* <p\n                            className={styles.imageBtn}\n                            onClick={() => setTrigger(false)}\n                        >\n                            Change image\n                        </p> */}\n                        {/* <p className={styles.imageBtn}>Change image</p> */}\n                        </>\n                    ) : (\n                        <Icon name={'icon-photo-camera'} width={100} height={100} />\n                    )}\n                </div>\n            ) : (\n                <div className={styles.imageContainer}>\n                <div {...getRootProps({ style })}>\n                    <input {...getInputProps()} />\n                    <p>Drag 'n' drop some files here, or click to select files</p>\n                    <em>(Only *.jpeg and *.png images will be accepted)</em>\n                </div>\n                </div>\n            )}\n            </OutsideClicker>\n            <p className={styles.imageBtn} style={{visibility: hideImgButton()}} onClick={()=> setTrigger(false)}>Change image</p>\n        </div>\n\n      </div>\n      <div className={styles.accRemain}>\n        <div className={styles.accTitleContainer}>\n          <p className={styles.accTitle}>\n            To add more <span className={styles.accSpan}>1 sq.m</span> for\n            planning, it remains to accumulate\n          </p>\n          <p className={styles.accNum}>\n            {squareMeters >= plan.footage ? 0 : Math.round(oneMoreMeterCost)}{' '}\n            &#8372;\n          </p>\n        </div>\n        <div className={styles.svgContainer}></div>\n      </div>\n    </>\n  );\n};  ","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"DynamicsPage_section__gfswJ\"};","import { Chart } from \"components/Dynamics/Chart\";\nimport { Info } from \"components/Dynamics/Info\";\nimport style from './DynamicsPage.module.scss';\n\nconst DynamicsPage = () => {\n  return <section className={style.section}>\n    <Chart/>\n    <Info/>\n  </section>;\n};\n\nexport default DynamicsPage;\n"],"names":["months","dispatch","useDispatch","useState","Date","selectedDate","setSelectedDate","isLoggedIn","useSelector","selectorIsLoggedIn","location","useLocation","isDirty","setIsDirty","isDynamicsPage","pathname","endsWith","useEffect","getTransaction","changedDateForApi","getCategoriesStat","getDynamicsByMonth","newDate","month","getMonth","year","getFullYear","className","clsx","selected","onChange","date","handleDateChange","value","changedDateForPicker","onCalendarClose","maxDate","dateFormat","showMonthYearPicker","Icon","name","width","height","secondaryClassName","optionsPhone","chartArea","bottom","maintainAspectRatio","categoryPercentage","barPercentage","indexAxis","borderRadius","elements","bar","borderWidth","responsive","plugins","legend","display","labels","font","size","title","layout","padding","left","scales","y","beginAtZero","grid","borderColor","border","ticks","color","backdropPadding","gridLines","tickMarkLength","position","x","offset","tickLength","tickBorderDash","dash","fontColor","optionsTablet","family","weight","selectStatByYear","state","dynamics","statByYear","selectStatByMonth","statByMonth","selectAccumulatedProc","accumulatedProc","selectAccumulatedUah","accumulatedUah","selectFlatImage","flatImage","selectMonth","selectSquareMeters","squareМeters","selectYear","selectorOneMoreMeterCost","createSelector","ownPlan","plan","footage","cost","oneSquareMeterCost","oneMoreMeterCost","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Chart","matchesTablet","useMediaQuery","query","chartRef","useRef","income","expense","accumulated","planInProcent","useMemo","getDynamics","data","datasets","map","_","i","elem","backgroundColor","style","ref","options","DateComp","parseInt","OutsideClicker","props","wrapperRef","setTrigger","trigger","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","modalRoot","querySelector","closeModal","createPortal","s","onClick","fill","baseStyle","flexDirection","alignItems","borderStyle","outline","transition","Info","squareMeters","selectorStatePlan","isPlan","selectorIsPlanFootage","isModalOpen","setIsModalOpen","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","file","length","formData","FormData","append","postImage","Number","compareNumbers","a","b","styles","percentageCounted","percentage","src","alt","visibility","Math","round"],"sourceRoot":""}